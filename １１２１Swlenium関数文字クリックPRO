from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time


def setup_driver():
    """
    WebDriverを初期化する関数。

    Returns:
        WebDriver: 初期化済みのWebDriverオブジェクト。
    """
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service)
    return driver


def click_text(driver, text_to_find):
    """
    Seleniumを使って、指定した文字列が含まれる要素を探してクリックする関数。

    :param driver: SeleniumのWebDriverオブジェクト
    :param text_to_find: 探したい文字列
    """
    try:
        # 要素が見つかるまで待つ（最大10秒）
        element = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, f"//*[contains(text(), '{text_to_find}')]"))
        )
        # 見つかった要素をクリック
        element.click()
        print(f"文字 '{text_to_find}' を含む要素をクリックしました！")
    except Exception as e:
        print(f"エラーが発生しました: {e}")


if __name__ == "__main__":
    # WebDriverの初期化
    driver = setup_driver()

    try:
        # 指定のウェブページを開く
        driver.get("https://www.google.com/search?q=%E7%8C%AB&sca_esv=2a8d4a9126d5b31a&rlz=1C1PWSB_jaJP991JP991&sxsrf=ADLYWIJFxwfcx2HCFlj9riCwVNwSfJvxBg%3A1732116734716&ei=_gA-Z-6tK8Ln2roPrubI-AU&ved=0ahUKEwjupLrVneuJAxXCs1YBHS4zEl8Q4dUDCBE&uact=5&oq=%E7%8C%AB&gs_lp=Egxnd3Mtd2l6LXNlcnAiA-eMqzIKECMYgAQYJxiKBTIKECMYgAQYJxiKBTIKECMYgAQYJxiKBTILEAAYgAQYsQMYgwEyCBAAGIAEGLEDMggQABiABBixAzIIEAAYgAQYsQMyCBAAGIAEGLEDMggQABiABBixAzIFEAAYgARIuw5QAFiKDHABeAGQAQCYAcMBoAGuBqoBAzAuNbgBA8gBAPgBAZgCBKACnQSoAhTCAgcQIxgnGOoCwgIUEAAYgAQY4wQYtAIY6QQY6gLYAQHCAgoQABiABBixAxgEwgINEAAYgAQYsQMYgwEYBMICEBAAGIAEGLEDGIMBGAQYigWYAyy6BgYIARABGAGSBwMxLjOgB9Ue&sclient=gws-wiz-serp")

        # 指定の文字を探してクリック
        click_text(driver, "ニュース")

        # クリック後に30秒待つ
        print("クリック後、30秒待機します...")
        time.sleep(30)

    finally:
        # ブラウザを閉じる
        driver.quit()
