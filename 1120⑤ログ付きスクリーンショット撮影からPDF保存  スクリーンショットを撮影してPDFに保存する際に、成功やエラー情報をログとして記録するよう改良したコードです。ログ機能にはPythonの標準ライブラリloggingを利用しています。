from PIL import ImageGrab
import fitz  # PyMuPDF
import logging
import os


def setup_logger(log_file="screenshot_to_pdf_log.txt"):
    """
    ログを設定する関数。

    Parameters:
        log_file (str): ログを保存するファイル名（デフォルトは 'screenshot_to_pdf_log.txt'）。
    """
    logging.basicConfig(
        filename=log_file,
        level=logging.INFO,
        format="%(asctime)s - %(levelname)s - %(message)s",
        datefmt="%Y-%m-%d %H:%M:%S",
    )
    logging.info("ログの設定が完了しました。")


def screenshot_to_pdf(x1, y1, x2, y2, output_pdf, log_file="screenshot_to_pdf_log.txt"):
    """
    スクリーンショットを撮影し、PDFとして保存する関数。ログを記録します。

    Args:
        x1, y1 (int): スクリーンショット範囲の左上座標。
        x2, y2 (int): スクリーンショット範囲の右下座標。
        output_pdf (str): 出力するPDFファイル名。
        log_file (str): ログを保存するファイル名。

    Returns:
        str: 保存したPDFのファイルパス。
    """
    # ログの初期設定
    setup_logger(log_file)

    try:
        logging.info(f"スクリーンショットの範囲: ({x1}, {y1}, {x2}, {y2})")
        
        # スクリーンショットを範囲指定で撮影
        screenshot = ImageGrab.grab(bbox=(x1, y1, x2, y2))
        logging.info("スクリーンショットの撮影に成功しました。")

        # 一時的に画像を保存
        temp_image = "temp_image.png"
        screenshot.save(temp_image)
        logging.info(f"一時画像ファイルを保存しました: {temp_image}")

        # PDFに画像を書き込む
        pdf_document = fitz.open()  # 空のPDFを作成
        img_rect = fitz.Rect(0, 0, screenshot.width, screenshot.height)  # 画像の大きさに合わせたページサイズ
        img_page = pdf_document.new_page(width=img_rect.width, height=img_rect.height)  # 新しいページを追加
        img_page.insert_image(img_rect, filename=temp_image)  # ページに画像を挿入
        pdf_document.save(output_pdf)  # PDFを保存
        pdf_document.close()
        logging.info(f"PDFに保存しました: {output_pdf}")

        # 一時ファイルの削除
        os.remove(temp_image)
        logging.info(f"一時画像ファイルを削除しました: {temp_image}")

        return output_pdf

    except Exception as e:
        logging.error(f"エラーが発生しました: {e}")
        print(f"エラーが発生しました: {e}")


# 使用例
output_pdf_path = screenshot_to_pdf(100, 100, 500, 400, "output.pdf")
print(f"PDFとして保存しました: {output_pdf_path}")
